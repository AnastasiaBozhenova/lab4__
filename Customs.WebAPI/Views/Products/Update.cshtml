@model Customs.WebAPI.Models.Product.UpdateProductVm

@{ ViewData["Title"] = "Редактирование"; }

<div class="container">
    <h1>Обновить</h1>

    <hr/>
    <form class="row" method="post" asp-action="Update" asp-route-id="@Model.Id">
        <div class="col-md-4">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control"/>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UnitMeasurement" class="control-label"></label>
                <input asp-for="UnitMeasurement" type="number" class="form-control"/>
                <span asp-validation-for="UnitMeasurement" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Сохранить" class="btn btn-success"/>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="StorageId" class="control-label"></label>
                <select asp-for="StorageId" class="form-control">
                    @if (Enumerable.Count(ViewBag.Storages) == 0)
                    {
                        <option>Нет доступных складов</option>
                    }
                    @foreach (var storage in ViewBag.Storages)
                    {
                        <option value="@storage.Id">@storage.Name</option>
                    }
                </select>
                <span asp-validation-for="StorageId" class="text-danger"></span>
            </div>
        </div>
    </form>

    <div>
        <a asp-action="Index">Назад</a>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}